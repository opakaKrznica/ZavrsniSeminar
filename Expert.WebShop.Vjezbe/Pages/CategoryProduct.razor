@page "/category/{id:int}/{CategoryName}"
@using Expert.WebShop.Vjezbe.models;
@inject HttpClient httpClient;
@inject NavigationManager navManager;




<div class="container-md Width">

    <nav class="nav flex-column  sticky-top">

        <div class="p-1 d-flex indigo justify-content-between"

           <h1 class="pt-3 p-1 text-center fs-2">@category.CategoryName</h1>

            <h4 class="pt-4 p-1 text-center" >ID: @category.Id</h4>

           <button type="button" class="btn-secondary rounded-2 border-dark border-bottom
                 border-end border-2 rounded-2 p-2 m-2" @onclick="Return">
                 Go Back
          </button>

       </div>

        <div class="border grayBg pt-2 text-center ">

            <h5>@category.CategoryDescription</h5>

        </div>

    </nav>

    <section class="d-flex justify-content-center text-center grayBg">

        <ul class="list-unstyled  p-4">

            @foreach (var item in products)
            {
                <li>
                    <div class="card p-sm-3">

                        <div>
                            @{
                                var images = productImages.Where(x => x.ProductId == item.Id).ToList();
                                foreach (var image in images)
                                {
                                    <img class="img-thumbnail rounded-2 w-75 " src=@image.imagePath alt="neka slika..">
                                }

                            }
                        </div>

                        <div class="card-body ">
                            <h5 class="card-title space h2">
                                @item.ProductName
                            </h5>
                            <p class="card-text">
                                @item.ProductDescription
                            </p>
                            <p class="card-text fs-5">
                               Price:  @item.ProductPrice  Eur
                            </p>
                        </div>
                        <button type="button" class="btn btn-success p-2" @onclick="()=>GoToDetails(item.Id)">DETAILS</button>
                    </div>
                </li>
                <br />
                <br />
            }

        </ul>
    </section>
</div>


@code {
    [Parameter]
    public int Id { get; set; }
    [Parameter]
    public string CategoryName { get; set; }

    private Category category = new Category();
    private List<Products> products = new List<Products>();
   
    private List<ImageFilePath> productImages = new List<ImageFilePath>();


    protected override async Task OnInitializedAsync()
    {
        var result = await httpClient.GetAsync("https://expertshopapi.azurewebsites.net/api/Products");

        if (result.IsSuccessStatusCode)
        {
            products = await result.Content.ReadFromJsonAsync<List<Products>>();

            foreach (var item in products)
            {
                var getImg = await GetImages(item.Id);
                productImages.AddRange(getImg);
            }
        }

        category = await GetCategory(Id);
        products = await GetProducts(Id);
        navManager.LocationChanged += LocationChanged;

    }



    public async Task<Category> GetCategory(int categoryId)
    {
        var result = await httpClient.GetAsync($"{Constants.BaseUrl}/Categories/{Id}");
        if (result.IsSuccessStatusCode)
        {
            category = await result.Content.ReadFromJsonAsync<Category>();
        }
        return category;
    }


    public async Task<List<Products>> GetProducts(int categoryId)
    {
        var proizvodiresult = await httpClient.GetAsync($"{Constants.BaseUrl}/Products/category-products/{Id}");
        if (proizvodiresult.IsSuccessStatusCode)
        {
            products = await proizvodiresult.Content.ReadFromJsonAsync<List<Products>>();
        }
        return products;
    }


    public async Task<List<ImageFilePath>> GetImages(int Id)
    {
        var apiResult = await httpClient.GetAsync($"{Constants.BaseUrl}/FileUpload/GetProductPhotos/{Id}");
        var images = new List<ImageFilePath>();

        if (apiResult.IsSuccessStatusCode)
        {
            images = await apiResult.Content.ReadFromJsonAsync<List<ImageFilePath>>();
        }
        return images;
    }

    async void LocationChanged(object sender, LocationChangedEventArgs e)
    {
        category = await GetCategory(Id);
        products = await GetProducts(Id);
        StateHasChanged();
    }

    private async void Return()
    {
        navManager.NavigateTo("/");
    }

    async void GoToDetails(int Id)
    {
        navManager.NavigateTo($"/product-details/{Id}");
    }

}
