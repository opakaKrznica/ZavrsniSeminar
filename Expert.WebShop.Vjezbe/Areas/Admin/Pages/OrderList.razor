@page "/Admin/orders-list"
@using Expert.WebShop.Vjezbe.models;
@inject HttpClient httpClient;
@inject NavigationManager navManager;




<div class="container-md Width ">

    <nav class="navbar indigo d-md-flex justify-content-around sticky-top">

        <h3 class="mt-3 fs-2 ">Order List</h3>


        <button type="button" class="btn-secondary rounded-2 m-3 p-2 spec" @onclick="Return">
            Home
        </button>

    </nav>

    @{
       

    }


    <section class="d-flex justify-content-center text-center grayBg mb-5">
    
        <ul class="list-unstyled ">

            @foreach (var item in distinctOrders)
            {
                decimal GrandTotal = 0;

                <li class="my-5 bg-light">
                    <div class="card  text-center p-2 m-3">
                        <p class="card-text fs-4 bg-secondary spec2 p-3 text-decoration-underline">Order Id: @item.OrderId</p>

                        <p class="card-text fs-4">Name : @item.OrderedByName</p>
                        <p class="card-text fs-4">Adress : @item.OrderByAdress</p>
                        <p class="card-text fs-4">Mail : @item.OrderedByEmail</p>

                    </div>
                    <ul class="list-unstyled">

                        @foreach (var product in ordersList.Where(x => x.OrderId == item.OrderId).ToList())
                        {
                          

                            <li class="list-unstyled  p-1">

                                <div class="card  text-center p-2 mt-3">

                                    <div class="card-body">
                                       

                                            @*<h3 class="card-title bg-secondary text-dark rounded-2 p-2">
                                                Product name : @proizvodi.ProductName
                                </h3>*@
                                        @foreach (var proizvod in proizvodi.Where(x => x.Id == product.ProductId).ToList())
                                        {

                                            <h3 class="card-title fontIN grayBg text-dark rounded-2 p-2">
                                                Product name : @proizvod.ProductName
                                            </h3>
                                        }
                                                                              
                                        <br /><br />
                                        <p class="card-text fs-4">
                                            Price per product : @product.PricePerProduct Eur
                                        </p>
                                        <br />
                                        <p class="card-text fs-4">
                                            Number Of Items : @product.NumberOfItems
                                        </p>
                                        <br />
                                        <p class="card-text fs-4">
                                            Total Ammount : @product.TotalAmmount Eur
                                        </p>
                                        <br />

                                        @{
                                            GrandTotal = GrandTotal + product.TotalAmmount;
                                         }
                                    </div>
                                    
                                </div>
                            </li>
                           
                        }
                    </ul>
                    <p class="card-text fs-4 fw-bold border-dark border-bottom border-end border-1 rounded-2 bg-info">
                        Grand Total : @GrandTotal Eur
                    </p>

                </li>

            }

        </ul>
        
    </section>

</div>




@code {
    List<BuyItems> ordersList = new List<BuyItems>();
    List<BuyItems> distinctOrders = new List<BuyItems>();
    List<Products> proizvodi = new List<Products>();


    protected override async Task OnInitializedAsync()
    {
        var result = await httpClient.GetAsync($"{Constants.BaseUrl}/ShoppingCards");

        var result2 = await httpClient.GetAsync($"{Constants.BaseUrl}/Products");


        if (result.IsSuccessStatusCode)
        {
            ordersList = await result.Content.ReadFromJsonAsync<List<BuyItems>>();

            distinctOrders = ordersList.DistinctBy(x => x.OrderId).ToList();

            proizvodi = await result2.Content.ReadFromJsonAsync<List<Products>>();

        }
    }

    public async Task Return()
    {
        navManager.NavigateTo("/");
    }
}

