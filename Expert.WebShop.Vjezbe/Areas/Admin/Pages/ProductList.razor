@page "/Admin/product-list"
@using Expert.WebShop.Vjezbe.models;
@inject HttpClient httpClient;
@inject NavigationManager navManager;


<div class="container-md Width">

    <nav class="navbar indigo  p-2 d-flex justify-content-around sticky-top">

        <h2 class="pt-2 pe-md-5 text-center fs-2 ">Products  List</h2>

        <div class="my-auto d-flex justify-content-between m-2 ps-md-5">

            <button type="button" @onclick="AddProduct" class="btn-secondary border-dark border-bottom
          border-end border-2 rounded-2 p-2 m-2">
                Add New
            </button>

            <button type="button" class="btn-secondary rounded-2 border-dark border-bottom
          border-end border-2 rounded-2 p-2 m-2" @onclick="Return">
                Go Back
            </button>

        </div>

    </nav>

    <section class="d-flex justify-content-center text-center grayBg">
        <ul class="list-unstyled mt-3 p-2">
            @foreach (Products item in product)   
            {
                <li>

                    <div class="container">
                        <div class="card p-sm-3">

                            <div>
                                @{
                                    var images = productImages.Where(x => x.ProductId == item.Id).ToList();
                                    foreach (var image in images)
                                    {
                                        <img class="card-img-top img-thumbnail mx-auto d-block w-75 " src=@image.imagePath alt="neka slika..">
                                    }

                                }
                            </div>
                            <div class="card-body">

                                <h1 class="card-title">
                                    @item.ProductName
                                </h1>
                                <p class="card-text fs-5 ">
                                    @item.ProductDescription
                                </p>

                                <p class="card-text fs-4">
                                    Price: @item.ProductPrice Eur
                                </p>

                                <p class="card-text pb-2 fs-5">
                                    Discount:@item.Discount %
                                </p>


                                <div class="d-flex justify-content-around">
                                    <button type="button" @onclick="()=>EditProd(item.Id)" class="btn indigo text-light px-md-5 "> EDIT </button>
                                    <button type="button" @onclick="()=>DeleteProd(item.Id)" class="btn btn-danger px-md-4  ">DELETE</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </li>
                <br />
                <br />
            }
        </ul>
    </section>
</div>

@code {
    private List<Products> product = new List<Products>();
    private List<ImageFilePath> productImages = new List<ImageFilePath>();

    protected override async Task OnInitializedAsync()
    {
        var result = await httpClient.GetAsync($"{Constants.BaseUrl}/Products");

        if (result.IsSuccessStatusCode)
        {
            product = await result.Content.ReadFromJsonAsync<List<Products>>();

            foreach (var item in product)
            {
                var getImg = await GetImages(item.Id);
                productImages.AddRange(getImg);
            }
        }
    }

    public async Task<List<ImageFilePath>> GetImages(int Id)
    {
        var apiResult = await httpClient.GetAsync($"{Constants.BaseUrl}/FileUpload/GetProductPhotos/{Id}");
        var images = new List<ImageFilePath>();
        if (apiResult.IsSuccessStatusCode)
        {
            images = await apiResult.Content.ReadFromJsonAsync<List<ImageFilePath>>();
        }
        return images;
    }


    public async void AddProduct()
    {
        navManager.NavigateTo("/Admin/add-product");
    }

    public async void DeleteProd(int Id)
    {
        navManager.NavigateTo($"/Admin/delete-product/{Id}");
    }

    public async void EditProd(int Id)
    {
        navManager.NavigateTo($"/Admin/edit-product/{Id}");
    }

    async void GoToDetails(int Id)
    {
        navManager.NavigateTo($"/product-details/{Id}");
    }

    private async void Return()
    {
        navManager.NavigateTo("/Admin/administration");
    }

}
